<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="seed.project.board.model.mapper.BoardMapper3">
	
	<resultMap type="Board" id="board_rm">
		
		<!-- id 태그 : PK 역할을 하는 컬럼, 필드를 작성하는 태그 -->
		<id property="boardNo" column="BOARD_NO"/>
		
		<!-- * collection 태그
			select로 조회된 결과를 컬렉션(List)에 담아
			지정된 필드에 세팅
			
			property : List를 담을 DTO의 필드명
			select : 실행할 select의 id
			column : 조회 결과 중 지정된 컬럼의 값을 파라미터로 전달
			javaType : List(컬렉션)의 타입을 지정
			ofType : List(컬렉션)의 제네릭(타입 제한) 지정
		-->
		
		<!-- * 해당 게시글 이미지 목록 조회 후 필드에 저장 -->
		<collection 
			property="imageList"
			select ="selectImageList3"
			column="BOARD_NO"
			javaType="java.util.ArrayList"
			ofType="BoardImg"
		/>
		
		
		<!-- * 해당 게시글 댓글 목록 조회 후 필드에 저장 -->
<!-- 		<collection 
			property="commentList"
			select = "selectCommentList3"
			column="BOARD_NO"
			javaType="java.util.ArrayList"
			ofType="Comment"
		/> -->
	</resultMap>
	
	<!-- [공통] 보드 타입 검색 -->
	<select id="selectBoardTypeList">
		SELECT BOARD_CODE "boardCode", BOARD_NAME "boardName"
		FROM BOARD_TYPE
		ORDER BY BOARD_CODE
	</select>
	
	<!-- [공통] 게시글 수 조회 -->
	<select id="getListCount">
		SELECT COUNT(*)
		FROM "BOARD"
		WHERE BOARD_DEL_FL = 'N'
		AND BOARD_CODE = #{boardCode}
	</select>
	
	
	<!-- [3] 팁과 노하우 게시글 목록 조회 -->
	<select id="selectBoard3">
		SELECT BOARD_NO, BOARD_TITLE, MEMBER_NICKNAME, READ_COUNT,
    
		    (SELECT COUNT(*)
		    FROM "COMMENT" C
		    WHERE C.BOARD_NO = B.BOARD_NO
		    AND COMMENT_DEL_FL = 'N') COMMENT_COUNT,
		    
		    (SELECT COUNT(*)
		    FROM "BOARD_LIKE" L
		    WHERE L.BOARD_NO = B.BOARD_NO) LIKE_COUNT,
	    
		    <![CDATA[
		    CASE
			    WHEN SYSDATE - BOARD_WRITE_DATE < 1 / 24 / 60
			    THEN FLOOR((SYSDATE - BOARD_WRITE_DATE) * 24 * 60 * 60) || '초 전'
			    
			    WHEN SYSDATE - BOARD_WRITE_DATE < 1 / 24
			    THEN FLOOR((SYSDATE - BOARD_WRITE_DATE) * 24 * 60) || '분 전'
			    
			    WHEN SYSDATE - BOARD_WRITE_DATE < 1
			    THEN FLOOR((SYSDATE - BOARD_WRITE_DATE) * 24) || '시간 전'
			    
			    ELSE TO_CHAR(BOARD_WRITE_DATE, 'YYYY-MM-DD')
			    
			END BOARD_WRITE_DATE,
	    	]]>
	    	
	    (SELECT CONCAT(BOARD_IMG_PATH, BOARD_IMG_RENAME)
		 FROM BOARD_IMG
		 WHERE BOARD_NO = B.BOARD_NO
		 AND BOARD_IMG_ORDER = 0) THUMBNAIL
    	  
		FROM "BOARD" B
		JOIN "MEMBER" USING(MEMBER_NO)
		WHERE BOARD_DEL_FL = 'N'
		AND BOARD_CODE = #{boardCode}
		ORDER BY BOARD_NO DESC
	</select>
	
	<!-- [3] 팁과 노하우 검색 조건이 맞는 게시글 수 조회 -->
	<select id="getSearchCount3">
		SELECT COUNT(*)
		FROM "BOARD"
		
		<!-- 작성자 검색인 경우 -->
		<if test='key == "w"'>
			JOIN "MEMBER" USING(MEMBER_NO)
		</if>
		
		WHERE BOARD_DEL_FL = 'N'
		AND BOARD_CODE = #{boardCode}
		
		<choose>
			
			<!-- 제목검색 (key="t") -->
			<when test='key == "t"'>
				AND BOARD_TITLE LIKE '%' || #{query} || '%'
			</when>
			
			<!-- 내용검색 (key="c") -->
			<when test='key == "c"'>
				AND BOARD_CONTENT LIKE '%' || #{query} || '%'
			</when>
		
			<!-- 제목+내용 검색 (key="tc") -->
			<when test='key == "tc"'>
				AND (
				BOARD_TITLE LIKE '%' || #{query} || '%'
				OR
				BOARD_CONTENT LIKE '%' || #{query} || '%'
				)
			</when>
			
			<!-- 작성자검색 (key="w") -->
			<otherwise>
				AND MEMBER_NICKNAME LIKE '%' || #{query} || '%'
			</otherwise>
		</choose>
	</select>


	<!-- [3] 팁과 노하우 검색 결과 -->	
	<select id="selectSearchList3">
			SELECT BOARD_NO, BOARD_TITLE, MEMBER_NICKNAME, READ_COUNT,
    
		    (SELECT COUNT(*)
		    FROM "COMMENT" C
		    WHERE C.BOARD_NO = B.BOARD_NO
		    AND COMMENT_DEL_FL = 'N') COMMENT_COUNT,
		    
		    (SELECT COUNT(*)
		    FROM "BOARD_LIKE" L
		    WHERE L.BOARD_NO = B.BOARD_NO) LIKE_COUNT,
	    
		    <![CDATA[
		    CASE
			    WHEN SYSDATE - BOARD_WRITE_DATE < 1 / 24 / 60
			    THEN FLOOR((SYSDATE - BOARD_WRITE_DATE) * 24 * 60 * 60) || '초 전'
			    
			    WHEN SYSDATE - BOARD_WRITE_DATE < 1 / 24
			    THEN FLOOR((SYSDATE - BOARD_WRITE_DATE) * 24 * 60) || '분 전'
			    
			    WHEN SYSDATE - BOARD_WRITE_DATE < 1
			    THEN FLOOR((SYSDATE - BOARD_WRITE_DATE) * 24) || '시간 전'
			    
			    ELSE TO_CHAR(BOARD_WRITE_DATE, 'YYYY-MM-DD')
			    
			END BOARD_WRITE_DATE,
	    	]]>
	    	
		(SELECT CONCAT(BOARD_IMG_PATH, BOARD_IMG_RENAME)
		 FROM BOARD_IMG
		 WHERE BOARD_NO = B.BOARD_NO
		 AND BOARD_IMG_ORDER = 0) THUMBNAIL
	    	
    	  
		FROM "BOARD" B
		JOIN "MEMBER" USING(MEMBER_NO)
		WHERE BOARD_DEL_FL = 'N'
		AND BOARD_CODE = #{boardCode}
		
		<choose>
			<!-- 제목 검색 (key 값이 "t"인 경우)-->
			<when test='key=="t"'>
				AND BOARD_TITLE LIKE '%' || #{query} || '%'
			</when>
			
			<!-- 내용 검색 (key 값이 "c"인 경우)-->
			<when test='key=="c"'>
				AND BOARD_CONTENT LIKE '%' || #{query} || '%'
			</when>
			
			<!-- 제목 + 내용 검색 (key 값이 "tc"인 경우)-->
			<when test='key=="tc"'>
				AND (
					BOARD_CONTENT LIKE '%' || #{query} || '%'
					OR
					BOARD_TITLE LIKE '%' || #{query} || '%'
					) 
			</when>
			
			<!-- 작성자 검색 (key 값이 "w"인 경우 -->
			<otherwise>
				AND MEMBER_NICKNAME LIKE '%' || #{query} || '%'
			</otherwise>
			
		</choose>
		
		ORDER BY BOARD_NO DESC
	</select>

	<!-- [3] 팁과 노하우 게시판 - 게시글 상세 조회 -->
	<select id="selectOne3" resultMap="board_rm">
		SELECT BOARD_NO, BOARD_TITLE, BOARD_CONTENT, BOARD_CODE, READ_COUNT,
			MEMBER_NO, MEMBER_NICKNAME,
			
			(SELECT COUNT(*)
		    FROM "COMMENT"
		    WHERE BOARD_NO = #{boardNo}
		    AND COMMENT_DEL_FL = 'N') COMMENT_COUNT,
			
			TO_CHAR(BOARD_WRITE_DATE, 'YYYY"."MM"."DD HH24:MI') BOARD_WRITE_DATE, 
			TO_CHAR(BOARD_UPDATE_DATE, 'YYYY"."MM"."DD HH24:MI') BOARD_UPDATE_DATE,
			
			(SELECT COUNT(*)
			 FROM "BOARD_LIKE"
			 WHERE BOARD_NO = #{boardNo}) LIKE_COUNT,
			
			(SELECT BOARD_IMG_PATH || BOARD_IMG_RENAME
			 FROM "BOARD_IMG"
			 WHERE BOARD_NO = #{boardNo}
			 AND   BOARD_IMG_ORDER = 0) THUMBNAIL ,
			 
			 (SELECT COUNT(*) FROM "BOARD_LIKE"
			  WHERE MEMBER_NO = #{memberNo}
			  AND BOARD_NO = #{boardNo}) LIKE_CHECK
			  
	
		FROM "BOARD"
		JOIN "MEMBER" USING(MEMBER_NO)
		WHERE BOARD_DEL_FL = 'N'
		AND BOARD_CODE = #{boardCode}
		AND BOARD_NO = #{boardNo}
	</select>
	
	<!-- 상세 조회한 게시글의 이미지 목록 조회 -->
	<select id="selectImageList3" resultType="BoardImg">
		SELECT *
		FROM "BOARD_IMG"
		WHERE BOARD_NO = #{boardNo}
		ORDER BY BOARD_IMG_ORDER
	</select>
	
	
	<!-- [3] 팁과 노하우 게시판 - 조회수 1 증가 -->
	<update id="readCount3">
		UPDATE "BOARD" SET
		READ_COUNT = READ_COUNT + 1
		WHERE BOARD_NO = #{boardNo}	
	</update>
	

	<!-- [3] 팁과 노하우 게시판 - 조회수 조회 -->
	<select id="selectReadCount3">
		SELECT READ_COUNT
		FROM "BOARD"
		WHERE BOARD_NO = #{boardNo}
	</select>
	
	<!-- [3] 팁과 노하우 게시판 - 이전글 -->
	<select id="beforePage">

		SELECT NVL(
			(SELECT BOARD_NO 
			FROM "BOARD"
			WHERE BOARD_CODE = #{boardCode}
			AND BOARD_NO <![CDATA[<]]> #{boardNo}
			AND BOARD_DEL_FL = 'N'
			ORDER BY BOARD_NO DESC
			FETCH FIRST 1 ROW ONLY), -1
		)AS BOARD_NO 
		FROM "BOARD"
		WHERE BOARD_CODE = #{boardCode}
		ORDER BY BOARD_NO DESC
		FETCH FIRST 1 ROW ONLY
	</select>
	
	<!-- [3] 팁과 노하우 게시판 - 다음글 -->
	<select id="afterPage">	
		SELECT NVL(
			(SELECT BOARD_NO 
			FROM "BOARD"
			WHERE BOARD_CODE = #{boardCode}
			AND BOARD_NO <![CDATA[>]]> #{boardNo}
			AND BOARD_DEL_FL = 'N'
			ORDER BY BOARD_NO
			FETCH FIRST 1 ROW ONLY), -1
		) AS BOARD_NO
		FROM "BOARD"
		WHERE BOARD_CODE = ${boardCode}
		ORDER BY BOARD_NO
		FETCH FIRST 1 ROW ONLY
	</select>
	
	
	<!-- [3] 팁과 노하우 게시판 - 게시글 작성 -->
	<insert id="board3Write" useGeneratedKeys="true" parameterType="Board">
	
		<selectKey order="BEFORE" resultType="_int" keyProperty="boardNo">
			SELECT SEQ_BOARD_NO.NEXTVAL FROM DUAL
			
		</selectKey>
		
		INSERT INTO "BOARD"
		VALUES( #{boardNo},
				#{boardTitle},
				#{boardContent},
				DEFAULT, DEFAULT, DEFAULT, DEFAULT, DEFAULT,
				#{memberNo},
				#{boardCode}
				)		
	</insert>
	
	<!-- [3] 팁과 노하우 - 게시글 이미지 모두 삽입 -->
	<insert id="insertUploadList3" parameterType="list">
		
		INSERT INTO "BOARD_IMG"
		
		<foreach collection="list" item="img"
			open="(" close=")" separator="UNION">
			SELECT NEXT_BOARD_IMG_NO(),
			#{img.boardImgPath}, 
			#{img.boardImgOriginalName}, 
			#{img.boardImgRename}, 
			#{img.boardImgOrder}, 
			#{img.boardNo}
			FROM DUAL
		</foreach>	
	</insert>
	
	
	<!-- [3] 팁과 노하우 - 좋아요 해제 -->
	<delete id="deleteBoardLike3">
		DELETE FROM "BOARD_LIKE"
		WHERE MEMBER_NO = #{memberNo}
		AND BOARD_NO = #{boardNo}
	</delete>
	
	<!-- [3] 팁과 노하우 - 좋아요 체크 -->
	<insert id="insertBoardLike3">
		INSERT INTO "BOARD_LIKE" (MEMBER_NO, BOARD_NO)
		VALUES(#{memberNo}, #{boardNo})
	</insert>
	
	<!-- [3] 팁과 노하우 - 좋아요 수 조회 -->
	<select id="selectLikeCount3">
		SELECT COUNT(*) FROM "BOARD_LIKE"
		WHERE BOARD_NO = #{boardNo}
	</select>
	
	
	<!-- [3] 팁과 노하우 - 게시글 부분 수정 -->
	<update id="board3Update">
		UPDATE "BOARD" SET
		BOARD_TITLE = #{boardTitle},
		BOARD_CONTENT = #{boardContent},
		BOARD_UPDATE_DATE = SYSDATE
		WHERE BOARD_CODE = #{boardCode}
		AND BOARD_NO = #{boardNo}
		AND MEMBER_NO = #{memberNo}
	</update>
	
	<!-- [3] 팁과 노하우- 게시글 이미지 삭제  -->
	<delete id="deleteImage3">
		DELETE FROM "BOARD_IMG"
		WHERE BOARD_IMG_ORDER IN (${deleteOrder})
		AND BOARD_NO = #{boardNo}
	</delete>
	
	<!-- [3] 팁과 노하우 - 게시글 이미지 수정 -->
	<update id="updateImage3">
		UPDATE "BOARD_IMG" SET
		BOARD_IMG_ORIGINAL_NAME = #{boardImgOriginalName}, 
		BOARD_IMG_RENAME = #{boardImgRename}
		WHERE BOARD_NO = #{boardNo}
		AND BOARD_IMG_ORDER = #{boardImgOrder}
	</update>
	
	<!-- [3] 팁과 노하우 - 게시글 이미지 삽입  -->
	<insert id="insertImage3">
		INSERT INTO "BOARD_IMG"
		VALUES(NEXT_IMG_NO(), 
				#{boardImgPath}, 
				#{boardImgOriginalName}, 
				#{boardImgRename}, 
				#{boardImgOrder}, 
				#{boardNo})
	</insert>
	
	
	<!-- [3] 팁과 노하우 - 게시글 이미지 삭제  -->
	<update id="board3Delete">
		UPDATE "BOARD" SET
		BOARD_DEL_FL = 'Y'
		WHERE BOARD_NO = #{boardNo}
	</update>
	


	<!-- [3] 팁과 노하우 - 댓글 -->
	
	<!-- 댓글 목록 조회 -->
	<select id="commentSelect3">
		SELECT LEVEL, C.* FROM
		(SELECT COMMENT_NO, COMMENT_CONTENT,
				    <!-- TO_CHAR(COMMENT_WRITE_DATE, 'YYYY"."MM"."DD HH24":"MI') COMMENT_WRITE_DATE, -->
				    BOARD_NO, MEMBER_NO, MEMBER_NICKNAME, PARENT_COMMENT_NO, COMMENT_DEL_FL,
				 
					<![CDATA[
				    CASE
					    WHEN SYSDATE - COMMENT_WRITE_DATE < 1 / 24 / 60
					    THEN FLOOR((SYSDATE - COMMENT_WRITE_DATE) * 24 * 60 * 60) || '초 전'
					    
					    WHEN SYSDATE - COMMENT_WRITE_DATE < 1 / 24
					    THEN FLOOR((SYSDATE - COMMENT_WRITE_DATE) * 24 * 60) || '분 전'
					    
					    WHEN SYSDATE - COMMENT_WRITE_DATE < 1
					    THEN FLOOR((SYSDATE - COMMENT_WRITE_DATE) * 24) || '시간 전'
					    
					    ELSE TO_CHAR(COMMENT_WRITE_DATE, 'YYYY-MM-DD')
					    
					END COMMENT_WRITE_DATE
			    	]]>
				 	    
				FROM "COMMENT"
				JOIN MEMBER USING(MEMBER_NO)
				WHERE BOARD_NO = #{boardNo}) C
		WHERE COMMENT_DEL_FL = 'N'
		OR 0 != (SELECT COUNT(*) FROM "COMMENT" SUB
							WHERE SUB.PARENT_COMMENT_NO = C.COMMENT_NO
							AND COMMENT_DEL_FL='N')
		START WITH PARENT_COMMENT_NO IS NULL
		CONNECT BY PRIOR COMMENT_NO = PARENT_COMMENT_NO
		ORDER SIBLINGS BY COMMENT_NO
	</select>
	
	
	<!-- 댓글 / 자식 댓글 등록 -->
	<insert id="commentInsert3">
		INSERT INTO "COMMENT"
		VALUES(SEQ_COMMENT_NO.NEXTVAL, #{commentContent}, DEFAULT, DEFAULT, #{boardNo}, #{memberNo}, 
			<!-- 자식 댓글 -->
			<if test="parentCommentNo != 0">
				#{parentCommentNo}			
			</if>
	
			<!-- 자식 댓글 -->
			<if test="parentCommentNo == 0">NULL</if>
		)
	</insert>
	
	<!-- 댓글 수정 -->
	<update id="commentUpdate3">
		UPDATE "COMMENT" SET
		COMMENT_CONTENT = #{commentContent}
		WHERE COMMENT_NO = #{commentNo}
	</update>
	
	<!-- 댓글 삭제 -->
	<delete id="commentDelete3">
		UPDATE "COMMENT" SET
		COMMENT_DEL_FL = 'Y'
		WHERE COMMENT_NO = #{commentNo}
	</delete>
	
	
	
	
</mapper>